{"version":3,"sources":["svg/logo.svg","images/playMovie/netflix-logo.png","components/moviePage/Navbar.js","pages/Movie.js","components/introPage/Header.js","components/introPage/TabComponent.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarCSS","css","Navbar","useState","scrolled","href","height","src","netflixLogo","className","MoviePage","state","Component","Header","HeaderComponent","Logo","logo","to","StoryCard","HeroCard","Title","EmailForm","EmailLockUp","SimpleForm","EmailInput","placeholder","type","Button","styled","div","input","button","img","h1","h2","ul","TabComponent","StartPage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,+sCCK3C,IAmEMC,EAAYC,YAAH,KAqCAC,EAnGA,WAAO,IAAD,EACYC,oBAAS,GADrB,mBACbC,EADa,UAcpB,OACC,mBACCH,IAAK,CACJD,EACAI,EACGH,YADK,KASLA,YATK,OAcT,sBACC,sBACC,iBAAGI,KAAK,KACP,mBAAKC,OAAO,KAAKC,IAAKC,SAWzB,kBAAIC,UAAU,YCxCFC,E,4MAXdC,MAAQ,G,uDAEP,OACC,6BAEC,kBAAC,EAAD,W,GANoBC,a,44FC2DTC,E,4MAhDdF,MAAQ,G,uDAEP,OACC,kBAACG,EAAD,CAAiBL,UAAU,oBAC1B,yBAAKA,UAAU,cACd,kBAACM,EAAD,CAAMR,IAAKS,MAIX,kBAAC,IAAD,CAAMP,UAAU,aAAaQ,GAAG,UAAhC,YAWD,kBAACC,EAAD,KAEC,kBAACC,EAAD,KACC,kBAACC,EAAD,iDACA,oEAED,kBAACC,EAAD,KACC,kBAACC,EAAD,KACC,kBAACC,EAAD,KACC,kBAACC,EAAD,CAAYC,YAAY,gBAAgBC,KAAK,UAE9C,kBAAC,IAAD,CAAMT,GAAG,UACR,kBAACU,EAAD,0BAED,kDAED,6G,GArCef,aAmDfU,EAAcM,IAAOC,IAAV,KAYXN,EAAaK,IAAOC,IAAV,KAEVL,EAAaI,IAAOE,MAAV,KAoBVH,EAASC,IAAOG,OAAV,KAkBNb,EAAYU,IAAOC,IAAV,KAUTV,EAAWS,IAAOC,IAAV,KAQRd,EAAOa,IAAOI,IAAV,KAUJlB,EAAkBc,IAAOC,IAAV,KAwCfT,EAAQQ,IAAOK,GAAV,KAeLZ,GARWO,IAAOM,GAAV,KAQIN,IAAOO,GAAV,M,gBChLAC,E,4MAlBdzB,MAAQ,G,uDAEP,OACC,kC,GAJwBC,aCYZyB,E,uKATb,OACC,6BACC,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANoBzB,a,OCmBT0B,E,uKAXb,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWJ,IAC7C,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,SAASC,UAAW/B,U,GANzBE,aCCE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACR,6BACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDyHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.54a9dacb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.35f3a5ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/netflix-logo.faf3e5b9.png\";","/** @jsx jsx */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { css, jsx } from \"@emotion/core\";\r\nimport netflixLogo from \"../../images/playMovie/netflix-logo.png\";\r\n\r\nconst leftLinks = [\"Home\", \"TV Shows\", \"Movies\", \"Latest\", \"My List\"];\r\n\r\n/**\r\n * @function Navbar\r\n */\r\nconst Navbar = () => {\r\n\tconst [scrolled, setScrolled] = useState(false);\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst handleScroll = () =>\r\n\t// \t\twindow.pageYOffset > 75 ? setScrolled(true) : setScrolled(false);\r\n\r\n\t// \tconst onScroll = window.addEventListener(\"scroll\", handleScroll);\r\n\r\n\t// \treturn () => {\r\n\t// \t\twindow.removeEventListener(\"scroll\", onScroll);\r\n\t// \t};\r\n\t// }, []);\r\n\r\n\treturn (\r\n\t\t<nav\r\n\t\t\tcss={[\r\n\t\t\t\tNavbarCSS,\r\n\t\t\t\tscrolled\r\n\t\t\t\t\t? css`\r\n\t\t\t\t\t\t\tbackground-color: rgb(20, 20, 20);\r\n\t\t\t\t\t\t\tbackground-image: linear-gradient(\r\n\t\t\t\t\t\t\t\tto bottom,\r\n\t\t\t\t\t\t\t\trgba(0, 0, 0, 0.7) 10%,\r\n\t\t\t\t\t\t\t\trgba(0, 0, 0, 0)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  `\r\n\t\t\t\t\t: css`\r\n\t\t\t\t\t\t\tbackground: transparent;\r\n\t\t\t\t\t  `,\r\n\t\t\t]}\r\n\t\t>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t\t<img height=\"75\" src={netflixLogo} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t{/* \r\n\t\t\t\t{leftLinks.map((link) => (\r\n\t\t\t\t\t<li key={link}>\r\n\t\t\t\t\t\t<a href=\"/\">{link}</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))} */}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<ul className=\"right\">\r\n\t\t\t\t{/* <li>\r\n\t\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t\t<i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"/\">\r\n\t\t\t\t\t\t<i className=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li> */}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nconst NavbarCSS = css`\r\n\tposition: fixed;\r\n\theight: 68px;\r\n\tz-index: 99;\r\n\twidth: 100%;\r\n\tpadding: 0 25px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\tli {\r\n\t\tmargin-right: 20px;\r\n\t}\r\n\r\n\ta {\r\n\t\tfont-size: 15px;\r\n\t\tletter-spacing: 0.5px;\r\n\t\tcolor: #e5e5e5;\r\n\t}\r\n\r\n\ta.active {\r\n\t\tcolor: white;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\tul.right {\r\n\t\ti {\r\n\t\t\tfont-size: 22px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n// import Header from \"../components/moviePage/Header\";\r\nimport Navbar from \"../components/moviePage/Navbar\";\r\n\r\nclass MoviePage extends Component {\r\n\tstate = {};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* <Header /> */}\r\n\t\t\t\t<Navbar />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MoviePage;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"../../svg/logo.svg\";\r\n// import {  } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"../../css/App.css\";\r\nimport MoviePage from \"../../pages/Movie\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\tNavLink,\r\n} from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n\tstate = {};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<HeaderComponent className=\"header-container\">\r\n\t\t\t\t<div className=\"header-top\">\r\n\t\t\t\t\t<Logo src={logo} />\r\n\t\t\t\t\t{/* <NavLink className=\"signIn-btn\" to=\"/movie\">\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</NavLink> */}\r\n\t\t\t\t\t<Link className=\"signIn-btn\" to=\"/movie\">\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{/* <button\r\n\t\t\t\t\t\tclassName=\"signIn-btn\"\r\n\t\t\t\t\t\tonclick=\"window.location.href='../moviePage/Movie'\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</button> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* Header Content */}\r\n\t\t\t\t<StoryCard>\r\n\t\t\t\t\t{/* <div className=\"header-content\"> */}\r\n\t\t\t\t\t<HeroCard>\r\n\t\t\t\t\t\t<Title>Unlimited films, TV programmes and more.</Title>\r\n\t\t\t\t\t\t<h2>Watch anywhere. Cancel at any time.</h2>\r\n\t\t\t\t\t</HeroCard>\r\n\t\t\t\t\t<EmailForm>\r\n\t\t\t\t\t\t<EmailLockUp>\r\n\t\t\t\t\t\t\t<SimpleForm>\r\n\t\t\t\t\t\t\t\t<EmailInput placeholder=\"Email address\" type=\"text\" />\r\n\t\t\t\t\t\t\t</SimpleForm>\r\n\t\t\t\t\t\t\t<Link to=\"/movie\">\r\n\t\t\t\t\t\t\t\t<Button>TRY 30 DAYS FREE</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<p>Email is required.</p>\r\n\t\t\t\t\t\t</EmailLockUp>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\tReady to watch? Enter your email to create or restart your\r\n\t\t\t\t\t\t\tmembership.\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</EmailForm>\r\n\t\t\t\t\t{/* </div> */}\r\n\t\t\t\t</StoryCard>\r\n\t\t\t</HeaderComponent>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n\r\nconst EmailLockUp = styled.div`\r\n\tp {\r\n\t\ttext-align: left;\r\n\t\tmargin: 0;\r\n\t\tpadding: 10px;\r\n\t\tfont-size: 15px;\r\n\t\tcolor: #ffa00a;\r\n\t}\r\n\t/* text-align: left;\r\n\tmargin: 0; */\r\n`;\r\n\r\nconst SimpleForm = styled.div``;\r\n\r\nconst EmailInput = styled.input`\r\n\t/* margin-bottom: 10px; */\r\n\t/* display: inline-flex; */\r\n\t/* padding: 0;\r\n*/\r\n\t/* display: flex; */\r\n\tcolor: #8c8c8c;\r\n\tborder-radius: 4px;\r\n\tfont-size: 16px;\r\n\tmargin: 0;\r\n\tfloat: left;\r\n\tposition: relative;\r\n\tpadding: 0 1em;\r\n\twidth: 60%;\r\n\tbackground: #fff;\r\n\tmax-width: 450px;\r\n\theight: 60px;\r\n\tmin-height: 60px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n\t/* float: left; */\r\n\tborder-radius: 2px;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tpadding: 0 1em;\r\n\twidth: 40%;\r\n\tposition: relative;\r\n\ttext-align: center;\r\n\t/* right: 0px; */\r\n\tcolor: #fff;\r\n\tborder: none;\r\n\tdisplay: flex;\r\n\tbackground: #f40612;\r\n\tfont-size: 1.625rem;\r\n\tmin-height: 60px;\r\n`;\r\n\r\nconst StoryCard = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding: 75px 0;\r\n\tmax-width: 950px;\r\n\tmargin: 0 auto;\r\n\ttext-align: center;\r\n\tz-index: 1;\r\n`;\r\n\r\nconst HeroCard = styled.div`\r\n\tmax-width: 640px;\r\n\tmargin: 0 auto;\r\n\th2 {\r\n\t\tfont-weight: 80;\r\n\t}\r\n`;\r\n\r\nconst Logo = styled.img`\r\n\twidth: 134px;\r\n\theight: 44px;\r\n\tposition: absolute;\r\n\ttop: 25%;\r\n\tleft: 10%;\r\n\ttransform: translate(-50%, -50%);\r\n`;\r\n\r\n// Header Container\r\nconst HeaderComponent = styled.div`\r\n\t.signIn-btn {\r\n\t\tright: 0;\r\n\t\tmargin: 1.125rem 3% 0;\r\n\t\tpadding: 0.4275rem 1.0625rem;\r\n\t\tfont-weight: 400;\r\n\t\tline-height: normal;\r\n\t\tborder-radius: 0.1875rem;\r\n\t\tfont-size: 1rem;\r\n\t\tbackground: var(--main-red);\r\n\t\tposition: absolute;\r\n\t\ttranslate: transform(-50%, -50%);\r\n\t\tcursor: pointer;\r\n\t\ttransition: background 0.2s ease-in;\r\n\t\t&:hover {\r\n\t\t\tbackground: var(--main-red-hover);\r\n\t\t}\r\n\t}\r\n\r\n\t.header-top {\r\n\t\tposition: relative;\r\n\t\theight: 10rem;\r\n\t\tz-index: 1;\r\n\t}\r\n\r\n\t// Header Content\r\n\t.header-content {\r\n\t\tmax-width: 550px;\r\n\t\tposition: relative;\r\n\t\tmargin: 4.5rem auto 0;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-content: center;\r\n\t\ttext-align: center;\r\n\t\tflex-direction: column;\r\n\t\tz-index: 1;\r\n\t}\r\n`;\r\n\r\n// Main Title\r\nconst Title = styled.h1`\r\n\tmax-width: 640px;\r\n\tmargin: 0 auto;\r\n\tfont-size: 3.125rem;\r\n`;\r\n\r\n// Subtitle\r\nconst SubTitle = styled.h2`\r\n\t/* font-weight: 400; */\r\n\tfont-size: 1.625rem;\r\n\tline-height: 1.25em;\r\n\tmargin: 0 0 1.875rem;\r\n\t/* text-transform: uppercase; */\r\n`;\r\n\r\nconst EmailForm = styled.ul`\r\n\th3 {\r\n\t\tfont-weight: 50;\r\n\t}\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\n// import 'react-tabs/style/react-tabs.css';\r\nimport TabDoor from \"./tab_nav/TabDoor\";\r\nimport \"../../css/TabsNav.css\";\r\nclass TabComponent extends Component {\r\n\tstate = {};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* <Tabs>\r\n\t\t\t\t\t<TabList>\r\n\t\t\t\t\t\t<Tab>\r\n\t\t\t\t\t\t\t<TabDoor />\r\n\t\t\t\t\t\t</Tab>\r\n\t\t\t\t\t\t<Tab>Tab Link 2</Tab>\r\n\t\t\t\t\t\t<Tab>Tab Link 3</Tab>\r\n\t\t\t\t\t</TabList>\r\n\t\t\t\t</Tabs> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TabComponent;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../components/introPage/Header\";\r\n// import { BrowserRouter } from \"react-router-dom\";\r\nimport TabComponent from \"../components/introPage/TabComponent\";\r\n\r\nclass StartPage extends Component {\r\n\t// state = {  }\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<TabComponent />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default StartPage;\r\n","import React, { Component } from \"react\";\nimport StartPage from \"./pages/index\";\nimport MoviePage from \"./pages/Movie\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink,\n\tRedirect,\n} from \"react-router-dom\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/netflixclone\" component={StartPage} />\n\t\t\t\t\t<Route exact path=\"/movie\" component={MoviePage} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n\t<div>\n\t\t<App />\n\t</div>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}